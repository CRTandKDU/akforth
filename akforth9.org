#+begin_src akforth9
0 variable S1 0 variable S2 0 variable ARRAY
0 variable CALLS

: 2dup S1 ! S2 ! S2 @ S1 @ S2 @ S1 @ ;
: 3dup S1 ! S2 ! ARRAY ! ARRAY @ S2 @ S1 @ ARRAY @ S2 @ S1 @ ;
: 2in3dup S1 ! S2 ! ARRAY ! ARRAY @ S2 @ ARRAY @ S2 @ S1 @ ;
: min 2dup > if swap then drop ;

( <cols> <rows> arr2d -- <array> )
: arr2d 2dup * 2 + alloc swap over ! swap over 4 + ! ;
: arr2d-to rot swap over 4 + @ * rot + 4 * 8 + + ;
( <array> <col> <row> <value> arr2d! -- )
: arr2d! S1 ! arr2d-to S1 @ swap ! ;
( <array> <col> <row> arr2d@ -- <value> )
: arr2d@ arr2d-to @ ;

8 constant SIZE
SIZE SIZE arr2d constant B

: board 0 SIZE 1 - do i 0 SIZE 1 - do i 2in3dup swap arr2d@ 0= if ". " else "Q " then type loop cr drop loop drop ;

B board

#+end_src

